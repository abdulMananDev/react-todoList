{"version":3,"sources":["components/List.js","components/FlashMessages.js","App.js","reportWebVitals.js","index.js"],"names":["List","props","useState","flag","setFlag","updateflag","setUpdateFlag","updationValue","setUpdationValue","index","setIndex","useEffect","localStorage","getItem","prev","JSON","parse","setItem","stringify","className","type","placeholder","id","value","onChange","e","target","spellCheck","autoFocus","autoCapitalize","onClick","setTodoValue","console","log","map","data","style","textDecoration","todoValue","hello","filter","filterz","indexOf","FlashMessages","message","App","input","setInput","list","setList","flashFlag","setFlashFlag","flashMessage","setFalshMessage","checkDuplicate","find","element","name","concat","listItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b4af10b6.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst List = props => {\r\n  const [flag, setFlag] = useState(false);\r\n  const [updateflag, setUpdateFlag] = useState(0);\r\n  const [updationValue, setUpdationValue] = useState();\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const handleComplete = () => {\r\n    setFlag(prev => !prev);\r\n  };\r\n\r\n  const handleDelete = e => {\r\n    setFlag(prev => !prev);\r\n    props.setTodoValue(prev =>\r\n      prev.filter(filterz => {\r\n        return prev.indexOf(filterz) !== +e.target.id;\r\n      })\r\n    );\r\n  };\r\n  const handleUpdate = e => {\r\n    setIndex(prev => (prev = e.target.id));\r\n    setUpdateFlag(prev => (prev = 1));\r\n    setUpdationValue(prev => (prev = props.todoValue));\r\n  };\r\n  const handleUpdatedValue = e => {\r\n    setUpdationValue(prev => (prev = e.target.value));\r\n  };\r\n  const update = () => {\r\n    if (updationValue === \"\") {\r\n      return;\r\n    }\r\n    props.setTodoValue(prev => {\r\n      console.log(updationValue);\r\n      prev[index] = updationValue;\r\n      return prev.map(data => {\r\n        return data;\r\n      });\r\n    });\r\n    setUpdationValue(prev => (prev = \"\"));\r\n    setUpdateFlag(prev => (prev = 0));\r\n  };\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"flags\")) {\r\n      setFlag(prev => (prev = JSON.parse(localStorage.getItem(\"flags\"))));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"flags\", JSON.stringify(flag));\r\n  }, [flag]);\r\n  return (\r\n    <>\r\n      <>\r\n        {updateflag ? (\r\n          <div className=\"update-wrapper\">\r\n            <div className=\"update\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input\"\r\n                placeholder=\"update-value\"\r\n                id=\"\"\r\n                value={updationValue}\r\n                onChange={handleUpdatedValue}\r\n                spellCheck=\"false\"\r\n                autoFocus\r\n                autoCapitalize\r\n              />\r\n\r\n              <button className=\"update-btn\" onClick={update}>\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </>\r\n\r\n      <div className=\"todoList-wrapper\">\r\n        <div className=\"todoList\">\r\n          {flag ? (\r\n            <span\r\n              className=\"todo-item\"\r\n              style={{ textDecoration: \"line-through\" }}\r\n            >\r\n              {props.todoValue}\r\n            </span>\r\n          ) : (\r\n            <span className=\"todo-item\"> {props.todoValue}</span>\r\n          )}\r\n        </div>\r\n        <div className=\"todo-controls\">\r\n          {!flag ? (\r\n            <button className=\"update-btn\">\r\n              <span id={props.hello} onClick={handleUpdate}>\r\n                Update\r\n              </span>\r\n            </button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <button className=\"complete-btn\">\r\n            <span onClick={handleComplete}>\r\n              {flag ? \"Completed\" : \"Complete\"}\r\n            </span>\r\n          </button>\r\n\r\n          {flag ? (\r\n            <button className=\"delete-btn\">\r\n              <span id={props.hello} onClick={handleDelete}>\r\n                Delete\r\n              </span>\r\n            </button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default List;\r\n","import React from \"react\";\r\nconst FlashMessages = props => {\r\n  return (\r\n    <div className=\"flash-message\">\r\n      <span>{props.message}</span>\r\n    </div>\r\n  );\r\n};\r\nexport default FlashMessages;\r\n","import React, { useState, useEffect } from \"react\";\nimport List from \"./components/List\";\nimport FlashMessages from \"./components/FlashMessages\";\nimport \"./index.css\";\n\nfunction App() {\n  // state\n  const [input, setInput] = useState(\"\");\n  const [list, setList] = useState([]);\n  const [flashFlag, setFlashFlag] = useState(0);\n  const [flashMessage, setFalshMessage] = useState(\"\");\n\n  //  adding\n  const addTodo = () => {\n    let duplicate = checkDuplicate();\n\n    if (duplicate) {\n      setFlashFlag(prev => (prev = 1));\n      setFalshMessage(prev => (prev = `${input} is Listed `));\n      return;\n    }\n    if (input === \"\") {\n      setFlashFlag(prev => (prev = 1));\n      setFalshMessage(prev => (prev = \"You Forgot Something !!\"));\n      return;\n    }\n\n    setFlashFlag(prev => (prev = 0));\n    console.log(\"click\");\n    setList(prev => prev.concat(input));\n    setInput(prev => (prev = \"\"));\n  };\n\n  // input change\n  const handleChange = e => {\n    setInput(prev => (prev = e.target.value));\n  };\n  const checkDuplicate = () => {\n    console.log(input);\n    return list.find(element => element === input);\n  };\n\n  // local storage\n  useEffect(() => {\n    if (localStorage.getItem(\"duties\")) {\n      setList(JSON.parse(localStorage.getItem(\"duties\")));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"duties\", JSON.stringify(list));\n  }, [list]);\n\n  return (\n    // container\n    <div className=\"todo-container\">\n      {flashFlag ? <FlashMessages message={flashMessage} /> : \"\"}\n\n      {/* input field */}\n      <div className=\"input-wrapper\">\n        <span className=\"heading-primary\">Lets's Get It Done!!</span>\n        <input\n          type=\"text\"\n          name=\"\"\n          className=\"input\"\n          id=\"todolist Enter\"\n          placeholder=\"Jot Down the Goals!!\"\n          onChange={handleChange}\n          value={input}\n          spellCheck=\"false\"\n          autoFocus\n        />\n        <button className=\"add-btn\" onClick={addTodo}>\n          Add\n        </button>\n      </div>\n\n      {/* listing List */}\n      {list.map((listItem, index) => {\n        return (\n          <List hello={index} todoValue={listItem} setTodoValue={setList} />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}